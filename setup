#!/bin/bash

VERSION=$(lsb_release -si)

# Run as USER, not root/sudo

if [[ $(id -u) = "0" ]]
then
	echo Omni Setup needs to be run as a user, not root.  SUDO will be used for root-level access where applicable.
	echo Would you like to create a user now?
	read -p "Y for YES or Q to QUIT: " -n1 REPLY
	echo
	if [[ ${REPLY} =~ ^[Yy]$ ]]
	then
		read -e -p "Desired username: " -i "yourname" PU
		# Create user
		adduser ${PU}
		# Grant sudo
		usermod -a -G sudo ${PU}
		# Allow sudo without password
		echo -e "${PU}\tALL=(ALL)\tNOPASSWD:ALL" > /etc/sudoers.d/${PU}
		# Secure file
		chmod 0440 /etc/sudoers.d/${PU}
		echo
		echo Setup is now stopping.  Please login as \"${PU}\" and rerun without sudo.
	fi
	exit 1
fi

# Detect if Omni already installed

if [[ -d "/opt/OmniStream" ]]
then
	echo OmniStream appears to already be installed.  If you continue, OmniStream will be removed from
	echo /opt but your existing personalizations will remain.  You will still have to enable your services.
	echo Do you want to remove the downloaded OmniStream and start fresh?
	read -p "Y for YES or Q to QUIT: " -n1 REPLY
	echo
	if [[ ${REPLY} =~ ^[Yy]$ ]]
	then
		sudo rm -r /opt/OmniStream
	else
		exit 1
	fi
fi

# Detect if Docker is already installed

X=$(which docker)
if [[ ${?} = 0 ]]
then
	echo Docker appears to already be installed.  Since there are multiple methods for installing Docker,
	echo the install script will now exit.  Please uninstall Docker.  It will be reinstalled when you
	echo rerun \"setup\" afterwards and will then be able to be updated via other processes installed here.
	echo
	exit 1
fi

X=$(which docker-compose)
if [[ ${?} = 0 ]]
then
	echo Docker-compose  appears to already be installed.  Since there are multiple methods for installing
	echo docker-compose, the install script will now exit.  Please uninstall docker-compose.  It will be
	echo reinstalled when you rerun \"setup\" afterwards and will then be able to be updated via other
	echo processes installed here.
	echo
	exit 1
fi

# Install dependencies

echo Installing/verifying dependencies... 
sudo apt update > /dev/null 2>&1
APPLIST=" \
	acl \
	apache2-utils \
	apt-transport-https \
	at \
	bc \
	ca-certificates \
	curl \
	dialog \
	fuse \
	git-core \
	htop \
	jq \
	parallel \
	pigz \
	pv \
	python3-pip \
	rsync \
	software-properties-common \
	speedometer \
	speedtest-cli \
	unzip \
	vnstat \
	wget \
	"
for i in ${APPLIST}; do
	echo -n $i...
	sudo apt install -y $i > /dev/null 2>&1
	if [[ ${?} = 0 ]]
	then
		echo Done
	else
		echo Failed!
		exit 11
	fi
done

# Clone OmniStream to /opt

echo -n Grabbing OmniStream from GIT...
cd /opt
sudo mkdir -p OmniStream
sudo chown -R ${USER}:${USER} OmniStream
git clone https://github.com/kelinger/OmniStream.git > /dev/null 2>&1

if [[ ${?} = 0 ]]
then
	echo Done
else
	echo
	echo This is meant to be run on a system that has not yet been setup.  Use the update menu within Omni to bring
	echo the project up-to-date or clear the /opt/OmniStream directory and rerun setup to start fresh.
	echo
	echo This message may also be displayed if the download from GIT failed.  If this is the case \(no /opt/OmniStream\)
	echo then simply rerun the setup.
	echo
	exit 12
fi

# Install Docker

echo -n Grabbing Docker install script...

# This command historically fails when something is wrong on Docker's side.  It almost always works correctly when
# run a second time.  Thus, make 3 attempts.

curl -fsSL get.docker.com -o /tmp/get-docker.sh > /dev/null 2>&1
while [[ ${?} -ne 0 ]]
do
	echo -n download failed...waiting...
	sleep 15
	echo -n retrying...
	curl -fsSL get.docker.com -o /tmp/get-docker.sh > /dev/null 2>&1
done

if [[ ${?} != 0 ]]
then
	echo Failed!
	exit 13
fi

echo -n Installing Docker...
sed -i 's/sleep.../sleep 1/' /tmp/get-docker.sh
sudo sh /tmp/get-docker.sh > /dev/null 2>&1
while [[ ${?} -ne 0 ]]
do
	echo -n failed...waiting...
	sleep 15
	echo -n retrying...
	sudo sh /tmp/get-docker.sh > /dev/null 2>&1
done

if [[ ${?} = 0 ]]
then
	echo Done
else
	echo Failed!
	exit 13
fi

# Install Docker Compose

echo -n Installing Docker Compose...

cd /tmp
curl -s https://api.github.com/repos/docker/compose/releases/latest | grep browser_download_url  | grep docker-compose-linux-x86_64 | cut -d '"' -f 4 | wget -qi -
while [[ ${?} -ne 0 ]]
do
	echo -n failed...waiting...
	sleep 15
	echo -n retrying...
	curl -s https://api.github.com/repos/docker/compose/releases/latest | grep browser_download_url  | grep docker-compose-linux-x86_64 | cut -d '"' -f 4 | wget -qi -
done

if [[ ${?} = 0 ]]
then
	chmod +x docker-compose-linux-x86_64
	sudo mv docker-compose-linux-x86_64 /usr/local/bin/docker-compose
	echo Done
else
	echo Failed!
	exit 14
fi

# Allow current user to control Docker

echo -n Granting Docker permissions to ${USER}...
sudo usermod -aG docker ${USER} > /dev/null 2>&1
sudo gpasswd -a ${USER} docker > /dev/null 2>&1
sudo setfacl -m user:${USER}:rw /var/run/docker.sock > /dev/null 2>&1
echo Done

# Modify .bashrc

echo -n Updating .bashrc...
sed -zi '/source \/opt\/OmniStream\/bin\/omni_init/!s/$/\nsource \/opt\/OmniStream\/bin\/omni_init\n/' ~/.bashrc
echo Done

# Install services

echo -n Setting up services...
sudo systemctl start vnstat > /dev/null 2>&1
sudo systemctl enable vnstat > /dev/null 2>&1
sudo sed -i 's/^#user_allow_other/user_allow_other/g' /etc/fuse.conf
/opt/OmniStream/bin/update-rclone current > /dev/null 2>&1
echo Done

# Make system Omni-ready

echo Setting up Omni paths and functions
pip3 install --upgrade pip > /dev/null 2>&1
pip install --upgrade pip > /dev/null 2>&1
mkdir -p /opt/OmniStream/enabled /opt/OmniStream/logs ~/Omni/Configs ~/Omni/mnt
source /opt/OmniStream/bin/omni_init
o+ 001-header.yaml 002-traefik.yaml 999-footer.yaml
echo Done

# Start setup menu for parameters and help

echo
/opt/OmniStream/bin/make-env

### Output results

source /opt/OmniStream/.env
echo
echo
echo
echo
echo =====================================================
echo OmniStream initial setup complete.  Please review.
echo =====================================================
echo
echo Distribution is ${VERSION}
docker -v
docker-compose -v
echo
echo Rclone:
update-rclone
echo
echo
echo
echo
echo Rclone can be setup via the \"rclone config\" command.
echo or by restoring your configuration to the file:
echo ${HOME}/.config/rclone/rclone.conf
echo
echo Customizations are in ${HOME}/.config/omnistream.conf
echo
echo =====================================================
echo Now would be a really good time to reboot your server
echo =====================================================
