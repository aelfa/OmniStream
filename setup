#!/bin/bash

# Detect previous installs

VERSION=$(lsb_release -si)
DOCKER=$(which docker > /dev/null ; echo ${?})
COMPOSE=$(which docker-compose > /dev/null ; echo ${?})
OMNIHOME=${HOME}/OmniStream
OMNI=$(test -d ${OMNIHOME} ; echo ${?})

# Run as USER, not root/sudo

clear

if [[ $(id -u) = "0" ]]
then
	echo Omni Setup needs to be run as a user, not root.  SUDO will be used for root-level access where applicable.
	echo Would you like to create a user now?
	read -p "Y for YES or Q to QUIT: " -n1 REPLY
	echo
	if [[ ${REPLY} =~ ^[Yy]$ ]]
	then
		read -e -p "Desired username: " -i "yourname" PU
		# Create user
		adduser ${PU}
		# Grant sudo
		usermod -a -G sudo ${PU}
		# Allow sudo without password
		echo -e "${PU}\tALL=(ALL)\tNOPASSWD:ALL" > /etc/sudoers.d/${PU}
		# Secure file
		chmod 0440 /etc/sudoers.d/${PU}
		echo
		echo Setup is now stopping.  Please login as \"${PU}\" and rerun without sudo.
	fi
	rm ${0}
	exit 1
fi

if [[ ! -f ~/.selected_editor ]] 
then
	echo You do not yet have a default editor.
	/usr/bin/select-editor
fi

source ~/.selected-editor

# Detect if Omni already installed

if [[ ${OMNI} = 0 ]]
then
	omni stop 2>/dev/null
	cd ${OMNIHOME}
	git pull > /dev/null 2>&1
	if [[ ${?} = 0 ]]
	then
		echo Omnistream already installed and up-to-date
		echo
	else
		echo OmniStream appears to already be installed but appears to be different from the repo.
		echo If you continue, OmniStream will be removed from your system completely and you will be
		echo startig from scratch.  Do you want to remove the downloaded OmniStream and start fresh?
		read -p "Y for YES or Q to QUIT: " -n1 REPLY
		echo
		if [[ ${REPLY} =~ ^[Yy]$ ]]
		then
			sudo rm -r ${OMNIHOME}
			OMNI=1
		else
			exit 1
		fi
	fi
fi

# Install dependencies

echo Installing/verifying dependencies...
sudo apt update > /dev/null 2>&1
APPLIST=" \
	acl \
	apache2-utils \
	apt-transport-https \
	at \
	bc \
	ca-certificates \
	curl \
	dialog \
	fuse \
	git-core \
	htop \
	jq \
	parallel \
	pigz \
	pv \
	python3-pip \
	rsync \
	software-properties-common \
	speedometer \
	speedtest-cli \
	unzip \
	vnstat \
	wget \
	"
for i in ${APPLIST}; do
	echo -n "	"${i}...
	sudo apt install -y ${i} > /dev/null 2>&1
	if [[ ${?} = 0 ]]
	then
		echo Done
	else
		echo Failed!
		exit 11
	fi
done

# Clone OmniStream to HOME

cd ~
sudo mkdir -p OmniStream ${HOME}/.config
sudo chown -R ${USER}:${USER} OmniStream ${HOME}/.config

if [[ ${OMNI} = 0 ]]
then
	echo Skipping OmniStream download
else
	echo -n Grabbing OmniStream from GIT...
	git clone https://github.com/kelinger/OmniStream.git > /dev/null 2>&1

	if [[ ${?} = 0 ]]
	then
		echo Done
	else
		echo Download of OmniStream from GIT failed.  Please check ~\/OmniStream and remove any files leftover.
		echo Then, simply rerun the setup.
		echo
		exit 12
	fi
fi

# Install Docker

if [[ ${DOCKER} = 0 ]]
then
	echo Skipping Docker installation
else
	echo -n Installing Docker...

	curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg > /dev/null 2>&1

	echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null 2>&1

	sudo apt update > /dev/null 2>&1
	sudo apt install -y docker-ce docker-ce-cli containerd.io > /dev/null 2>&1

	while [[ ${?} -ne 0 ]]
	do
		echo -n download failed...waiting...
		sleep 15
		echo -n retrying...
	#curl -fsSL get.docker.com -o /tmp/get-docker.sh > /dev/null 2>&1
		sudo apt install -y docker-ce docker-ce-cli containerd.io > /dev/null 2>&1
	done

	if [[ ${?} = 0 ]]
	then
		echo Done
	else
		echo Failed!
		exit 13
	fi
fi

# Install Docker Compose

if [[ ${COMPOSE} = 0 ]]
then
	echo Skipping Docker-Compose installation
else
	echo -n Installing Docker Compose...

	cd /tmp
	curl -s https://api.github.com/repos/docker/compose/releases/latest | grep browser_download_url  | grep docker-compose-linux-x86_64 | cut -d '"' -f 4 | wget -qi -
	while [[ ${?} -ne 0 ]]
	do
		echo -n failed...waiting...
		sleep 15
		echo -n retrying...
		curl -s https://api.github.com/repos/docker/compose/releases/latest | grep browser_download_url  | grep docker-compose-linux-x86_64 | cut -d '"' -f 4 | wget -qi -
	done

	if [[ ${?} = 0 ]]
	then
		chmod +x docker-compose-linux-x86_64
		sudo mv docker-compose-linux-x86_64 /usr/local/bin/docker-compose
		echo Done
	else
		echo Failed!
		exit 14
	fi
fi

# Allow current user to control Docker

echo -n Granting Docker permissions to ${USER}...
sudo usermod -aG docker ${USER} > /dev/null 2>&1
sudo gpasswd -a ${USER} docker > /dev/null 2>&1
sudo setfacl -m user:${USER}:rw /var/run/docker.sock > /dev/null 2>&1
echo Done

# Modify .bashrc

echo -n Updating .bashrc...
sed -zi '/source ~\/OmniStream\/bin\/omni_init/!s/$/\nsource ~\/OmniStream\/bin\/omni_init\n/' ~/.bashrc
echo Done

# Install services

echo -n Setting up services...
sudo systemctl start vnstat > /dev/null 2>&1
sudo systemctl enable vnstat > /dev/null 2>&1
sudo sed -i 's/^#user_allow_other/user_allow_other/g' /etc/fuse.conf
${OMNIHOME}/bin/update-rclone current > /dev/null 2>&1
docker network create \
	--driver=bridge \
	-o "com.docker.network.bridge.enable_ip_masquerade"="true" \
	-o "com.docker.network.bridge.enable_icc"="true" \
	-o "com.docker.network.driver.mtu"="1500" \
	-o "com.docker.network.bridge.host_binding_ipv4"="0.0.0.0" \
	OmniNet > /dev/null 2>&1
echo Done

# Make system Omni-ready

echo Setting up Omni paths and functions
pip3 install --upgrade pip > /dev/null 2>&1
pip install --upgrade pip > /dev/null 2>&1
mkdir -p ${OMNIHOME}/enabled ${OMNIHOME}/logs ~/OmniStream/Configs ~/OmniStream/mnt
source ${OMNIHOME}/bin/omni_init > /dev/null 2>&1
o+ 001-header.yaml 002-traefik.yaml 003-omnimount.yaml 999-footer.yaml
echo Done

# Start setup menu for parameters and help

echo
${OMNIHOME}/bin/make-env
clear
${OMNIHOME}/bin/setup-rclone
clear
${OMNIHOME}/bin/setup-traefik
clear

### Output results

source ${OMNIHOME}/.env
echo
echo
echo
echo
echo =========================================================================
echo "         OmniStream initial setup complete.  Please review!"
echo =========================================================================
echo
echo Linux distribution is ${VERSION}
docker -v
docker-compose -v
echo
echo Rclone:
update-rclone
echo
echo Rclone settings:  ${RCLONEHOME}/rclone.conf
echo
echo OmniStream Config Files:  ${CONFIGS}
echo Traefik URL:  ${TRAEFIKNAME}.${MYDOMAIN}
echo
if [[ ${DOCKER} = 0 ]]
then
	echo Docker appears to already be installed.  Since there are multiple methods for installing Docker,
	echo the install script did not reinstall it.  Please make sure your Docker is up-to-date.
	echo
fi

if [[ ${COMPOSE} = 0 ]]
then
	echo Docker-compose appears to already be installed.  Since there are multiple methods for installing
	echo docker-compose, the install script did not reinstall it.  Please make sure your installation
	echo of docker-compose is up-to-date.
	echo
fi
if [[ ${OMNI} = 0 ]]
then
	echo OmniStream was already downloaded on this system.  It was checked and updated to the latest
	echo version, if applicable.
	echo
fi
echo
echo
echo Rclone can be configured via the \"rclone config\" command.
echo or by restoring your configuration to the file:
echo ${HOME}/.config/rclone/rclone.conf
echo
echo Customizations are in ${HOME}/.config/omnistream.conf
echo
echo =========================================================================
echo "  Please log out and back into your server for changes to take affect"
echo =========================================================================
